#
# This Playbook will install in a K8s Cluster, the following applications:
#
#   - Kubernetes Metrics Server (https://github.com/kubernetes-sigs/metrics-server)
#       Metrics Server collects resource metrics from Kubelets and exposes them in Kubernetes apiserver 
#       through Metrics API for use by Horizontal Pod Autoscaler and Vertical Pod Autoscaler. 
#       Metrics API can also be accessed by kubectl top, making it easier to debug autoscaling pipelines.
#
#   - Kubernetes Dashboard 
#
---

- name: Preparing
  hosts: local
  connection: local
  tasks:
    - name: Clean {{tmp_dir}} directory
      file:
        state: absent
        path: "../{{ tmp_dir }}/"
    - name: Creates {{tmp_dir}} directory
      file:
        path: ../{{ tmp_dir }}
        state: directory

- name: Download Kubernetes Metrics Server
  hosts: local
  connection: local
  vars:
    - metrics_server_file_name: metrics-server-{{metrics_server_version}}.tar.gz
  tasks:
    - name: Download K8s Metrics Server version {{metrics_server_version}}
      get_url:
        url: https://codeload.github.com/kubernetes-sigs/metrics-server/tar.gz/{{metrics_server_version}}
        dest: ../{{metrics_server_file_name}}
    - name: Extracting {{metrics_server_file_name}} to {{tmp_dir}}
      ansible.builtin.unarchive:
        src: ../{{metrics_server_file_name}}
        dest: ../{{ tmp_dir }}
    - name: Delete {{metrics_server_file_name}}
      file:
        path: ../{{metrics_server_file_name}}
        state: absent

- name: Install Kubernetes Metrics Server on Kubernetes
  hosts: local
  connection: local
  collections:
    - community.kubernetes
  tasks:
    - name: Reading all Metrics Server YAMLs to install it in K8s
      find:
        paths: ../{{ tmp_dir }}/metrics-server-0.3.6/deploy/1.8+/
        recurse: yes
      register: result_of_find
    - name: Deploying Metrics Server at K8s
      community.kubernetes.k8s:
        state: present
        src: "{{item.path}}"
      with_items: "{{ result_of_find.files }}"
    # List the Deployments
    #- name: Get a list of Services objects
    #  community.kubernetes.k8s_info:
    #    api_version: v1
    #    kind: Deployment
    #    namespace: kube-system
    #  register: service_list  
    #- name: List of Services
    #  debug:
    #    msg: "{{ item }}"
    #  with_items: 
    #    - "{{ service_list }}"

- name: Install Kubernetes Dashboard
  hosts: local
  connection: local
  collections:
    - community.kubernetes
  tasks:
    - name: Download K8s Dashboard {{url_dashboard}}
      get_url:
        url: "{{ url_dashboard }}"
        dest: ../{{ tmp_dir }}/k8s_dashboard_recommended.yaml
    - name: Deploying Dashboard at K8s
      community.kubernetes.k8s:
        state: present
        src: ../{{ tmp_dir }}/k8s_dashboard_recommended.yaml
    - name: Deploying Dashboard ClusterRoleBinding to use with Token Authentication
      community.kubernetes.k8s:
        state: present
        src: ../modules/infrastructure/containers-eks/kubernetes-dashboard-admin.rbac.yaml

- name: Create a Dashboard Service Account
  hosts: local 
  connection: local
  tasks:
    - name: Create the Service Account
      shell: |
        kubectl create serviceaccount dashboard-admin-sa
    - name: Bind the dasboard-admin-sa Service Account to the cluster-admin role
      shell: |
        kubectl create clusterrolebinding dashboard-admin-sa --clusterrole=cluster-admin --serviceaccount=default:dashboard-admin-sa
    - name: Get Token of the Service Account dasboard-admin-sa for Authorization
      shell: |
        kubectl describe secret $(kubectl get secret | grep dashboard-admin-sa | awk '{print $1}')
      register: token
      tags:
        - k8sinfo
    - name: Token dashboard-admin-sa Service Account
      debug:
        msg: "{{ token.stdout_lines }}"
      tags:
        - k8sinfo


- name: Retrieving K8s Info
  hosts: local
  connection: local
  tasks:
    - name: Token for Authorization
      shell: |
        kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep service-controller-token | awk '{print $1}')
      register: token
      tags:
        - k8sinfo
    - name: URL Dashboard
      debug:
        msg:
          - "Execute: kubectl proxy" 
          - "URL for Dashboard: http://127.0.0.1:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/"  
      tags:
        - k8sinfo    
    - name: Token service-controller Service Account
      debug:
        msg: "{{ token.stdout_lines }}"
      tags:
        - k8sinfo  

- name: Finalizing (Cleaning up...)
  hosts: local
  connection: local
  tasks:
    - name: Clean {{tmp_dir}} directory
      file:
        state: absent
        path: "../{{ tmp_dir }}/"